local items = {}

for _, v in pairs(workspace:GetDescendants()) do
	if v:IsA("BasePart") then
		table.insert(items, v)
	end
end

local encoded
local out = {}

for i, v: BasePart in pairs(items) do
	local tb = {}
	
	tb[1] = v.Color.R
	tb[2] = v.Color.G
	tb[3] = v.Color.B
	tb[4] = v.Material.Value
	tb[5] = v.Reflectance
	tb[6] = v.Transparency
	tb[7] = v.Name
	tb[8] = v.Size.X
	tb[9] = v.Size.Y
	tb[10] = v.Size.Z
	tb[11] = v.Position.X
	tb[12] = v.Position.Y
	tb[13] = v.Position.Z
	tb[14] = v.Orientation.X
	tb[15] = v.Orientation.Y
	tb[16] = v.Orientation.Z
	tb[17] = v.CanCollide
	tb[18] = v.Anchored
	tb[19] = v.ClassName
	
	if v:IsA("Part") then
		tb[20] = v.Shape.Value 
	end
	
	table.insert(out, tb)
end

encoded = game:GetService("HttpService"):JSONEncode(out)

local output = ""
local charcount = 0
local boxcount = 0

for v in encoded:gmatch(".") do
	charcount += 1
	output = output..v
	if charcount == 16000 then
		boxcount += 1
		local abc = Instance.new("TextBox")
		abc.Position = UDim2.new(0, 0, 0.05 * boxcount, 0)
		abc.Size = UDim2.new(0.5, 0, 0.05, 0)
		abc.Text = output
		abc.TextEditable = true
		abc.ClearTextOnFocus = false
		abc.Parent = game.Players.LocalPlayer.PlayerGui.BubbleChat
		output = ""
		charcount = 0
	end
end
